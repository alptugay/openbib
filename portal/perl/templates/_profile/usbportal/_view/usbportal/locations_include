[%#-
#######################################################################
#
# Templatename: admin_databases_html
#
# Typ         : Mastertemplate       
#
# Aufgabe:
#
# Ausgabe einer Uebersichtsliste aller eingerichteten Kataloge
# mit ihren wichtigsten Informationen
#
# Einrichtung eines neuen Kataloges
#
#######################################################################
-%]

<meta charset="utf-8">
<link rel="stylesheet" href="https://openlayers.org/en/v4.2.0/css/ol.css" type="text/css">
<!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
<script src="https://cdn.polyfill.io/v2/polyfill.min.js?featur
    es=requestAnimationFrame,Element.prototype.classList,URL"></script>
<script src="https://openlayers.org/en/v4.2.0/build/ol.js"></script>
<link rel="stylesheet" href="https://openlayers.org/en/v4.2.0/css/ol.css" type="text/css">


<style>
  br {
    display: block;
    margin: 3px 0;
  }

  .ol-touch .rotate-north {
    /*top: 90px;*/
  }

  .ol-full-screen {
    /*top: 70px; */
  }
  /*.ol-zoomslider {
            top: 250px;
        }

        .ol-zoom {
            top: 170px;
          }*/

  .obereLeiste_control {
    border-radius: 4px;
    opacity: 0.8;
    padding: 2px;
    position: absolute;

    top: 8px;
    left: 40px;
    right: 40px;
    background: #3E566C;
  }

  .divMobileFilterPanel {
    font: 0.8em sans-serif;
    position: absolute;
    left: 40px;

    top: 8px;
    padding: 2px;

    background: #3E566C;
  }

  .divMobile {
    background: #3E566C;
    font: 0.8em sans-serif;
    border-radius: 4px;
    height: 100%;
  }

  .filterPanel_control {
    border-radius: 6px;
    opacity: 0.8;
    padding: 2px;
    position: absolute;
    /*width: auto;*/
    height: auto;
    top: 43px;
    left: 40px;

    background: #3E566C;

    /*display: none;*/
  }

  #element2 {
    float: left;
    width: 116px;
  }

  #obereLeiste {
    color: white;
  }

  #filterPanel {
    color: white;
    height: auto;
  }

  #divSearch {
    float: left;
    text-align: left;
    display: inline;
	/*width: 100%;*/
  }

  .biggerText {
    font-size: 2.0em;
  }

  .tooltip {
    position: relative;
    padding: 3px;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    opacity: 0.9;
    white-space: nowrap;
    font: 0.7em sans-serif;
  }

  input[type=range] {
    /* fix for FF unable to apply focus style bug  */
    border: 1px solid white;

    /*required for proper track sizing in FF*/
    width: 150px;
  }

  input[type=range]::-moz-range-track {
    width: 150px;
    height: 5px;
    background: #ddd;
    border: none;
    border-radius: 3px;
  }

  input[type=range]::-moz-range-thumb {
    border: none;
    height: 16px;
    width: 16px;
    border-radius: 50%;
    background: black;
  }
  /*hide the outline behind the border*/

  input[type=range]:-moz-focusring {
    outline: 1px solid white;
    outline-offset: -1px;
  }

  input[type=range]:focus::-moz-range-track {
    background: #ccc;
  }
  /* Fullscreen */

  .map:-moz-full-screen {
    height: 100%;
  }

  .map:-webkit-full-screen {
    height: 100%;
  }

  .map:-ms-fullscreen {
    height: 100%;
  }

  .map:fullscreen {
    height: 100%;
  }

  .ol-rotate {
    top: 3em;
  }

  #mobileView {
    color: white;
    background-color: #3E566C;
  }
  /*POPUP*/

  .ol-popup {
    // position: absolute;
    background-color: #EFEFEF;
    -webkit-filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));
    filter: drop-shadow(0 1px 4px rgba(0, 0, 0, 0.2));
    padding: 15px;
    border-radius: 10px;
    border: 1px solid #cccccc;
    bottom: 12px;
    left: -50px;
    width: 300px;

    font: 0.7em sans-serif;
    max-height: 300px;
    overflow-y: scroll;
  }

  .ol-popup:after,
  .ol-popup:before {
    top: 100%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
  }

  .ol-popup:after {
    border-top-color: white;
    border-width: 10px;
    left: 48px;
    margin-left: -10px;
  }

  .ol-popup:before {
    border-top-color: #cccccc;
    border-width: 11px;
    left: 48px;
    margin-left: -11px;
  }

  .ol-popup-closer {

    text-decoration: none;
    position: absolute;
    top: 2px;
    right: 8px;
  }

  .ol-popup-closer:after {
    content: "✖";
  }

  #sucheMob {
    width: 80%;
  }

  #suche {
    width: 70%;
  }

  #daten a {
    color: white;
  }

  #titleMobileDesktop {
   font-family: OpenSansSemibold,Arial,Helvetica,sans-serif;
   color: #3E566C;
  }

</style>

[% IF locations.size > 0 %]

<h3 id="titleMobileDesktop"></h3>
<div id="mobileView">
  Name der Bibliothek oder Schlagwort<br /><input type="text" name="fname" id="sucheMob" list="theDataListMob"><input id="btnClearSearchMob" type="button" onclick="clearSucheMob()">
  <div id="daten"></div>
  <datalist id="theDataListMob"></datalist>
  <!--<br />
    		<input type="button" id="changeToDesktop" onclick="changeToDesktopView()" value="Auf der Karte ansehen"> -->
</div>
<div id="map" class="map" max-height="500px">
  <div id="obereLeiste"></div>
  <div id="filterPanel"></div>
  <div id="tooltip" class="tooltip"></div>

  <div id="popup" class="ol-popup">
    <a href="#" id="popup-closer" class="ol-popup-closer"></a>
    <div id="popup-content"></div>
  </div>
</div>
<input type="text" name="fname" id="suche" list="theDataList">
<div id="info" style="display: none;"></div>
<datalist id="theDataList" ></datalist>



<script type="text/javascript">
  // var container = document.getElementById('popup');
  var content = document.getElementById('popup-content');
  var closer = document.getElementById('popup-closer');




  var filterButton;
  var gewaehlteZeit;
  var gewaehlterTag = 9;
  var ints = [];
  var marks = [];
  var savedFakultaet = 8;
  var feature;
  var element;
  var element2;
  var checkBoxAus;
  var checkBoxPr;
  var checkBoxGps;
  var nurGeoeffnet;
  var slider;
  var tageChoice;
  var buttonZeitWaehlen;
  var btnAnsicht = document.createElement('button');

  var saveFilter;
  var time;
  var searchField;
  var institutsChoice;
  var buttonClearSearch;
  var artSelect;
  var textZeitWahl;
  var view;
  var ismobile = false;
  var gpsFeature;
  var screen;
  var nurGe;
  var sigelname = [];

  var allForMobile = [];
  var countForMobile = 0;
  var div1 = document.createElement('div');
  var div2 = document.createElement('div');
  var buttonAktuell = document.createElement('button');
  var divSearch = document.createElement('div');
  var aufInstitutsseite = false;


  // Bedienoberflächen ein/aus
  var showDesktopGui = false;

  var semester;
  var feiertag;

  var red = 'https:///www.ub.uni-koeln.de/lernen_arbeiten/bibliotheken/res/pin_pink.png';
  var grey = 'https:///www.ub.uni-koeln.de/lernen_arbeiten/bibliotheken/res/pin_grau.png';
  var green = 'https:///www.ub.uni-koeln.de/lernen_arbeiten/bibliotheken/res/pin_lindgruen.png';
  var pin_gps = 'https:///www.ub.uni-koeln.de/lernen_arbeiten/bibliotheken/res/pin_blau_GPS.png';
  var clock = 'https://www.ub.uni-koeln.de/lernen_arbeiten/bibliotheken/res/clock.png';
  var calendar = 'https://www.ub.uni-koeln.de/lernen_arbeiten/bibliotheken/res/calendar.png';


  var map;
  var layer;
  var foundInsts = [];
  var displayFromMobile;

  var windowWidth;
  var windowHeight;
  
  var browser = '';
  var printLogsToConsole = false;

  /**
   * Initialsierung
   * sigelUebergeben zB 'DE-38-101'
   */
  function init(sigelUebergeben) {
	printLogs("Übergebenes Sigel: " + sigelUebergeben);
	if(!String.prototype.startsWith){
		String.prototype.startsWith = function (str) {
			return !this.indexOf(str);
		}
	}
  
    browser = detectBrowser();
	
    // haben wir grad Semester?
    semester = getSemester(); // true = im Semester; false = Semesterferien
    // haben wir grad Feiertag?
    feiertag = getFeiertag(); // true = feiertag; false = kein Feiertag
	
	
	printLogs("Semester: " + semester);
	printLogs("Feiertag: " + feiertag);
    //gewaehlterTag = dates('tag');

    printLogs();
    windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;



    if (windowWidth < 1000 && screen === 'desktop') {
      screen = 'mobile';
      showDesktopGui = false;

      calcMarkers('8', true);
    }
    if (windowWidth > 1000 && screen === 'mobile') {
      screen = 'desktop';
      showDesktopGui = true;

      calcMarkers('8', true);
    }


    if (sigelUebergeben.length > 1) {
      aufInstitutsseite = true;

    } else
      aufInstitutsseite = false;

    document.getElementById('btnClearSearchMob').value = 'X';
    var options = '';
    for (var i = 0; i < institute.length; i++)
      options += '<option value="' + institute[i].name + '" />';

    document.getElementById('theDataList').innerHTML = options;

    //Map erstellen
    if (windowWidth < 1000) {
      document.getElementById('titleMobileDesktop').innerHTML = "Mobile Suche nach Campusbibliotheken";
      map = createMap('desktop');
      showDesktopGui = false;
      screen = 'mobile';
    } else if (windowWidth > 1000) {
      map = createMap('desktop');
      showDesktopGui = true;
      screen = 'desktop';
      document.getElementById('titleMobileDesktop').innerHTML = "Interaktive Map aller Campusbibliotheken in Echtzeit";
    }

    if (aufInstitutsseite)
      guiAusblenden();


    // Listener für GPS Checkbox initialisieren
      document.getElementById('track').checked = true;
       var checkbox = document.getElementById('track');
       checkbox.onchange = function() {
         if (this.checked)
           gps();
       } 

    document.getElementById('suche').value = "";
    var options = '';
    gewaehlteZeit = dates('uhrzeit');

    changeDay(9);
    if (sigelUebergeben.length === 0)
      calcMarkers('8', false);

    else
      calcMarkers(sigelUebergeben, false);

    updateClock(); // initial call
  }

  /*  function changeToDesktopView() {
			document.getElementById('popup').style.display = 'none';
    	    showDesktopGui = true;
		    showFilter('desktop');
            calcMarkers('8', true);
      } */

  // Listener für Browsersize
  window.onresize = function(event) {
    windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;

    //console.log("width: " + windowWidth + "   " + " screen: " + screen);

    if (windowWidth < 1000 && aufInstitutsseite === false) {
      screen = 'mobile';
      showDesktopGui = false;
      calcMarkers(9, true);
    }
    if (windowWidth > 1000 /* && screen === 'mobile' */ ) {
      screen = 'desktop';
      showDesktopGui = true;
      calcMarkers(9, true);
    }
  };

  function detectBrowser() {
    brws = '';
	if((navigator.userAgent.indexOf("Opera") || navigator.userAgent.indexOf('OPR')) != -1) brws = 'Opera';
    else if(navigator.userAgent.indexOf("Chrome") != -1) brws = 'Chrome';
    else if(navigator.userAgent.indexOf("Safari") != -1) brws = 'Safari';
    else if(navigator.userAgent.indexOf("Firefox") != -1) brws = 'Firefox';
    else if((navigator.userAgent.indexOf("MSIE") != -1) || (!!document.documentMode == true )) brws = 'IE'; //IF IE > 10
    else brws = 'unknown';
    
	printLogs("Browser: " + brws);
	return brws;
  }
  
  function clearSucheMob() {
    document.getElementById('sucheMob').value = "";
    document.getElementById('daten').innerHTML = "";
  }
	
	function printLogs(input) {
		if(printLogsToConsole)
			console.log(input);
	}
 
  /**
   * erstellt die Map samt ControlElementen
   */
  function createMap(screensize) {
    window.app = {};
    var app = window.app;

    element = document.getElementById('obereLeiste');
    element2 = document.getElementById('filterPanel');

    // FilterPane anzeigen/ausblenden
    filterButton = document.createElement('button');
    filterButton.id = 'filterButton';
    filterButton.innerHTML = 'Filter ausblenden';
    filterButton.addEventListener('click', function() {
      if (windowWidth > 1280)
        showFilter('desktop');
      else if (windowWidth < 1280)
        showFilter('mobile');
    }, false);

    btnAnsicht.id = 'btnAnsicht';
    btnAnsicht.innerHTML = "Zur mobilen Suche wechseln";

    btnAnsicht.addEventListener('click', function() {
      if (showDesktopGui === true) {
        showDesktopGui = false;
        calcMarkers(9, true);
      } else if (showDesktopGui === false) {
        screen = 'mobile';
        showDesktopGui = true;
        calcMarkers(9, true);
      }
    }, false);


    searchField = document.getElementById('suche');
    searchField.id = 'suche';
    searchField.class = 'inputControl';
    searchField.style['width'] = '450px';
   // searchField.style['max-width'] = '70%';
    searchField.type = 'text';

    buttonClearSearch = document.createElement('button');
    buttonClearSearch.id = 'clearSearch';
    buttonClearSearch.innerHTML = '✖';
    buttonClearSearch.addEventListener('click', function() {
      clearSearch();
    }, false);

    artSelect = document.createElement('select');
    artSelect.id = 'artSelect';
    artSelect.onchange = function(e) {
      calcMarkers(9, false);
    }
    artSelect.addEventListener('click', function() {
      if (document.getElementById('artSelect')[0].innerHTML !== "Präsenz- und Ausleihbibliotheken")
        document.getElementById('artSelect')[0].innerHTML = "Präsenz- und Ausleihbibliotheken";
    }, false);
    artSelect.setAttribute("style", "width: 220px");

    var opt0 = document.createElement('option');
    opt0.value = 0;
    opt0.text = 'Art der Bibliothek';
    opt0.selected = true;
    artSelect.appendChild(opt0);

    var opt1 = document.createElement('option');
    opt1.value = 1;
    opt1.text = 'nur Präsenzbibliotheken';
    artSelect.appendChild(opt1);

    var opt2 = document.createElement('option');
    opt2.value = 2;
    opt2.text = "nur Ausleihbibliotheken";
    artSelect.appendChild(opt2);

    // Institutsauswahl
    institutsChoice = document.createElement('select');
    institutsChoice.id = "institutsChoice";
    institutsChoice.onchange = function(e) {
      calcMarkers(this.value, false);
    }
    institutsChoice.addEventListener('click', function() {
      if (document.getElementById('institutsChoice')[0].innerHTML !== "Alle")
        document.getElementById('institutsChoice')[0].innerHTML = "Alle";
    }, false);
    institutsChoice.setAttribute("style", "width: 220px");

    var option9 = document.createElement("option");
    option9.value = 8;
    option9.text = "Auswahl nach Fakultäten";
    option9.selected = true;
    institutsChoice.appendChild(option9);

    var option0 = document.createElement("option");
    option0.value = 'DE-38-0';
    option0.text = "000 - ungebunden/übergreifend";
    institutsChoice.appendChild(option0);

    var option1 = document.createElement("option");
    option1.value = 'DE-38-1';
    option1.text = "100 - WiSo";
    institutsChoice.appendChild(option1);

    var option2 = document.createElement("option");
    option2.value = 'DE-38-2';
    option2.text = "200 - Rechtswissenschaften";
    institutsChoice.appendChild(option2);

    var option3 = document.createElement("option");
    option3.value = 'DE-38-3';
    option3.text = "300 - HumFak";
    institutsChoice.appendChild(option3);

    var option4 = document.createElement("option");
    option4.value = 'DE-38-4';
    option4.text = "400 - Philo";
    institutsChoice.appendChild(option4);

    var option5 = document.createElement("option");
    option5.value = 'DE-38-5';
    option5.text = "500 - MatNat";
    institutsChoice.appendChild(option5);

    element.className = 'ol-unselectable obereLeiste_control';

    time = document.createElement('span');
    time.id = 'time';

    checkBoxGps = document.createElement('button');
        checkBoxGps.id = 'track';
        checkBoxGps.innerHTML = 'Mein Standort';
        checkBoxGps.addEventListener('click', function() {
          gps();
        }, false);
		

    checkBoxPr = document.createElement('input');
    checkBoxPr.id = 'pr';
    checkBoxPr.defaultChecked = true;
    checkBoxPr.type = 'checkbox';
    checkBoxPr.value = 'test';
    checkBoxPr.onchange = function() {
      calcMarkers(9, false);
    }

    checkBoxAus = document.createElement('input');
    checkBoxAus.id = 'aus';
    checkBoxAus.defaultChecked = true;
    checkBoxAus.type = 'checkbox';
    checkBoxAus.onchange = function() {
      calcMarkers(9, false);
    }

    nurGeoeffnet = document.createElement('input');
    nurGeoeffnet.id = 'geoeffnet';
    nurGeoeffnet.defaultChecked = false;
    nurGeoeffnet.type = 'checkbox';
    nurGeoeffnet.onchange = function() {
      calcMarkers(9, false);
    }

    // Zeit wählen
    buttonZeitWaehlen = document.createElement('button');
    buttonZeitWaehlen.id = 'buttonZeit';

    buttonZeitWaehlen.innerHTML = 'Bibliotheksbesuch planen';
    buttonZeitWaehlen.addEventListener('click', function() {
      setTimeNow();
    }, false);

    slider = document.createElement('input');
    slider.id = 'rangevalue';
    slider.type = 'range';
    slider.class = 'slider';
    slider.min = '360';
    slider.max = '1439';
    slider.step = '15';

    textZeitwahl = document.createElement('span');
    textZeitwahl.setAttribute("style", "float: left");
    textZeitwahl.setAttribute("style", "position: absolute");
	
	if(browser !== 'IE') {
		slider.addEventListener("input", function() {
		  var minutes = addZero(parseInt(this.value % 60, 10));
		  var hours = parseInt(this.value / 60 % 24, 10);
		  gewaehlteZeit = hours + "" + minutes;
		  textZeitwahl.innerHTML = hours + ":" + minutes + " Uhr";
		  calcMarkers(9, false);
		});
	}
	else if(browser === 'IE'){
		slider.addEventListener("change", function() {
		  var minutes = addZero(parseInt(this.value % 60, 10));
		  var hours = parseInt(this.value / 60 % 24, 10);
		  gewaehlteZeit = hours + "" + minutes;
		  textZeitwahl.innerHTML = hours + ":" + minutes + " Uhr";
		  calcMarkers(9, false);
		});
	}
   
    slider.value = dates('stunde') * 60;
	
    tageChoice = document.createElement("select");
    tageChoice.id = "tageChoice";
    tageChoice.onchange = function(e) {
      var e1 = document.getElementById("tageChoice");
      var strUser = e1.options[e1.selectedIndex].text;

      changeDay(this.value);
    }

    tageChoice.setAttribute("style", "position: absolute");

    var optionHe = document.createElement("option");
    optionHe.value = 9;
    optionHe.selected = true;
    optionHe.text = 'Heute';
    tageChoice.appendChild(optionHe);

    var optionMo = document.createElement("option");
    optionMo.value = 0;
    optionMo.text = 'Montag';
    tageChoice.appendChild(optionMo);

    var optionDi = document.createElement("option");
    optionDi.value = 1;
    optionDi.text = 'Dienstag';
    tageChoice.appendChild(optionDi);

    var optionMi = document.createElement("option");
    optionMi.value = 2;
    optionMi.text = 'Mittwoch';
    tageChoice.appendChild(optionMi);

    var optionDo = document.createElement("option");
    optionDo.value = 3;
    optionDo.text = 'Donnerstag';
    tageChoice.appendChild(optionDo);

    var optionFr = document.createElement("option");
    optionFr.value = 4;
    optionFr.text = 'Freitag';
    tageChoice.appendChild(optionFr);

    var optionSa = document.createElement("option");
    optionSa.value = 5;
    optionSa.text = 'Samstag';
    tageChoice.appendChild(optionSa);

    var optionSo = document.createElement("option");
    optionSo.value = 6;
    optionSo.text = 'Sonntag';
    tageChoice.appendChild(optionSo);

    element2.className = 'ol-unselectable filterPanel_control';

    buttonAktuell.id = 'buttonAktuell';
    buttonAktuell.innerHTML = 'Aktuell';
    buttonAktuell.addEventListener('click', function() {
      setTimeNow();
    }, false);
    buttonAktuell.setAttribute("style", "display: none");

    var this_ = this;
    var handleRotateNorth = function(e) {
      this_.getMap().getView().setRotation(0);
    };
    createObereLeiste();

    //**************************************************************


    if (screensize === 'desktop') {
      showDesktopGui = true;
    } else if (screensize === 'mobile') {
      showDesktopGui = false;
    }

    //**************************************************************
    // Filterpanel
    app.CustomToolbarControl2 = function(opt_options) {
      var options = opt_options || {};
      var spanFilterPanel = document.createElement('span');
      spanFilterPanel.id = 'spanFilterPanel';
       checkBoxGps.setAttribute("style", "float: right");
       var gpsText = document.createTextNode("Meine Position anzeigen");
      var prText = document.createTextNode("Präsenz");
      var ausText = document.createTextNode("Ausleih");
      textZeitWahl = document.createTextNode('Uhrzeit und Tag wählen');
      var clockIcon = document.createElement("img");
      clockIcon.setAttribute("src", clock);
      clockIcon.setAttribute("height", "25");
      clockIcon.setAttribute("width", "25");

      var calIcon = document.createElement('img');
      calIcon.setAttribute("src", calendar);
      calIcon.setAttribute("height", "25");
      calIcon.setAttribute("width", "25");

      element2.appendChild(filterButton);
       element2.appendChild(btnAnsicht);
      element2.appendChild(checkBoxGps);
      element2.appendChild(document.createElement('br'));
      element2.appendChild(document.createElement('br'));
      spanFilterPanel.appendChild(institutsChoice);
      var tdInstMark = document.createElement("span");
      tdInstMark.id = "tdInstMark";
      //tdInstMark.setAttribute('style', 'float: right');
      spanFilterPanel.appendChild(tdInstMark);
      spanFilterPanel.appendChild(document.createElement('br'));

      spanFilterPanel.appendChild(document.createElement('br'));
      var tdArtMark = document.createElement("span");
      tdArtMark.id = "tdArtMark";
      spanFilterPanel.appendChild(artSelect);
      spanFilterPanel.appendChild(tdArtMark);

      spanFilterPanel.appendChild(document.createElement('br'));
      spanFilterPanel.appendChild(document.createElement('br'));


      nurGe = document.createTextNode("Nur geöffnete Bibliotheken anzeigen");
      nurGe.id = 'nurGe';
      nurGe.className = "textInFilterBox";
      spanFilterPanel.appendChild(nurGeoeffnet);
      spanFilterPanel.appendChild(nurGe);
      spanFilterPanel.appendChild(document.createElement('br'));
      spanFilterPanel.appendChild(document.createElement('br'));
      spanFilterPanel.appendChild(btnAnsicht);

      spanFilterPanel.appendChild(document.createElement('br'));
      spanFilterPanel.appendChild(document.createElement('br'));

      var divZeitwahl = document.createElement('div');
      divZeitwahl.id = 'divZeitwahl';
      divZeitwahl.className = 'divZeitwahl';
      divZeitwahl.setAttribute("style", "display: none");

      divZeitwahl.appendChild(textZeitWahl);
      divZeitwahl.appendChild(document.createElement('br'));
      divZeitwahl.appendChild(clockIcon);
      divZeitwahl.appendChild(slider);
      divZeitwahl.appendChild(textZeitwahl);


      divZeitwahl.appendChild(document.createElement('br'));
      divZeitwahl.appendChild(calIcon);
      divZeitwahl.appendChild(document.createTextNode('\u00A0\u00A0'));
      divZeitwahl.appendChild(tageChoice);
      buttonAktuell.setAttribute("style", "float: right");

      spanFilterPanel.appendChild(buttonZeitWaehlen);


      spanFilterPanel.appendChild(divZeitwahl);
      element2.appendChild(spanFilterPanel);

      document.getElementById('suche').addEventListener('input', function() {
        search();
      });

      document.getElementById('sucheMob').addEventListener('input', function() {
        searchMob();
      });

      saveFilter = document.getElementById('spanFilterPanel').innerHTML;
      ol.control.Control.call(this, {
        element: element2,
        target: options.target
      });

    };
    ol.inherits(app.CustomToolbarControl2, ol.control.Control);
    //}


    var container = document.getElementById('popup');
    var uverlay = new ol.Overlay( /** @type {olx.OverlayOptions} */ ({
      element: container,
      autoPan: true,

      autoPanAnimation: {
        duration: 250
      }

    }));

    var cologne = ol.proj.transform([6.919183, 50.933183], 'EPSG:4326', 'EPSG:3857');
    view = new ol.View({
      center: cologne,
      zoom: 14
    });

    var map = new ol.Map({
      controls: ol.control.defaults({
        attributionOptions: /** @type {olx.control.AttributionOptions} */ ({
          collapsible: false
        })
      }).extend([
        new app.CustomToolbarControl(),
        new app.CustomToolbarControl2(),
        new ol.control.FullScreen()
      ]),
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM()
        })
      ],
      target: 'map',
      view: new ol.View({
        center: cologne,
        zoom: 14
      }),
    });


    var tooltip = document.getElementById('tooltip');
    var overlay = new ol.Overlay({
      element: tooltip,
      offset: [10, 0],
      positioning: 'bottom-left'
    });

    // Hoverpopup
    map.addOverlay(overlay);

    // Klickpopup
    map.addOverlay(uverlay);

    map.on('pointermove', displayTooltip);
    map.on('click', displayPopup);


    function displayTooltip(evt) {
      var pixel = evt.pixel;
      var feature = map.forEachFeatureAtPixel(pixel, function(feature) {
        return feature;
      });
      var all = [];
      if (feature) {
        map.forEachFeatureAtPixel(pixel, function(feature) {
          all.push(feature);
        });
        var s3 = doTheText(all, false);
        tooltip.style.display = s3 ? '' : 'none';
        overlay.setPosition(evt.coordinate);
        s3 += '<br /><br />Klicken für weitere Informationen';
        tooltip.innerHTML = s3;
      } else {
        tooltip.style.display = 'none';
        all = [];
      }
    };

    closer.onclick = function() {
      uverlay.setPosition(undefined);
      closer.blur();
      return false;
    };


    function displayPopup(evt) {
      var width = document.documentElement.clientWidth;
      var height = document.documentElement.clientHeight;


      var pixel = evt.pixel;
      var feature = map.forEachFeatureAtPixel(pixel, function(feature) {
        return feature;
      });
      var all = [];
      if (feature) {
        map.forEachFeatureAtPixel(pixel, function(feature) {
          all.push(feature);
        });

        document.getElementById('popup').style.display = 'block';
        var coordinate = evt.coordinate;
        var s3 = doTheText(all, true);
        content.innerHTML = s3;
        uverlay.setPosition(coordinate);
        tooltip.style.display = 'none';

      } else {
        document.getElementById('popup').style.display = 'none';
      }
    };

    zoomslider = new ol.control.ZoomSlider();
    map.addControl(zoomslider);
    return map;
  }

  function doTheText(all, mitInfo) {
    var string = '';
    if (all.length > 1)
      string += all.length + " Institute an diesem Standort<br>";
    string += "<ul>";
    for (var i = 0; i < all.length; i++) {
      var a = all[i];
      coord = a.getGeometry().getCoordinates();
      coord = ol.proj.transform(coord, 'EPSG:3857', 'EPSG:4326');
      //var s = a.get('name');
      var s0 = a.get('name').split("$$");
      var s1 = '';
      var status = '';

      var nameLink = s0[1];

      if (s0[3].match(/DE-38-[0-9]{0,3}$/))
        var nameLink = '<a target="blank" href="/lernen_arbeiten/bibliotheken/38_' + s0[3].replace(/DE-38-/g, "") + '/index_ger.html">' + s0[1] + '</a>';
	  
	  // USB	
      else if (s0[1] == 'USB Köln')
        var nameLink = '<a target="blank" href="/index_ger.html">' + s0[1] + '</a>';

	  // HWA
	  else if(s0[1] == 'USB Köln / Humanwissenschaftliche Abteilung')
		var nameLink = '<a target="blank" href="https://www.ub.uni-koeln.de/ueber_uns/dach/hwa/index_ger.html">' + s0[1] + '</a>';
	
      // Japanisches Kulturinstitut
      else if(s0[1] == 'Japanisches Kulturinstitut')
		var nameLink = '<a target="blank" href="http://www.jki.de/">' + s0[1] + '</a>';

      if (s0[0] === '1')
        status = '<strong style="color: green">zurzeit geöffnet</strong>';
      else if (s0[0] === '2')
        status = '<strong style="color: red">zurzeit geschlossen</strong>';
      else if (s0[0] === 'undefined')
        status = '<strong style="color: grey">Keine Öffnungszeiten angegeben</strong>';

      if (mitInfo === true) {
        string += "<li style=margin-bottom:20px;>" + nameLink + "<br />" + s0[4] + "<br />" + status + "<br />";
        string += s0[2] + "</li>";
      } else {
        string += "<li style=margin-bottom:20px;>" + s0[1] + "<br />" + status + "</li>";
      }
      allForMobile.push(string);
    }
    string += "</li>";
    return string;
  }

  /* GPS */
  function gps() {
    if (checkBoxGps.checked == true) {
      var geolocation = new ol.Geolocation({
        projection: map.getView().getProjection(),
        tracking: true,
        trackingOptions: {
          enableHighAccuracy: true,
          maximumAge: 2000
        }
      });
      var iconStyle = new ol.style.Style({
        image: new ol.style.Icon({
          anchor: [0.5, 100],
          anchorXUnits: 'fraction',
          anchorYUnits: 'pixels',
          opacity: 1.0,

          src: pin_gps,
          scale: 0.03
        })
      });

      gpsFeature = new ol.Feature();
      var iconSource = new ol.source.Vector({
        features: [gpsFeature]
      });
      var iconLayer = new ol.layer.Vector({
        source: iconSource,
        style: iconStyle
      });
      map.addLayer(iconLayer);

      var pos;
      geolocation.on('change', function() {
        pos = geolocation.getPosition();

        gpsFeature.setGeometry(new ol.geom.Point(pos));
      });


    }
  }

  function createObereLeiste() {
    app.CustomToolbarControl = function(opt_options) {
      var options = opt_options || {};
      element.appendChild(div1);

      div1.appendChild(time);
      div1.setAttribute("style", "float: right");

      divSearch.id = 'divSearch';
      var form = document.createElement('form');
      var searchText = document.createTextNode("Name der Bibliothek oder Schlagwort: ");

      divSearch.appendChild(searchText);
      divSearch.appendChild(searchField);
      divSearch.appendChild(buttonClearSearch);
      element.appendChild(divSearch);
      element.appendChild(div2);
      div1.appendChild(document.createElement('br'));

      ol.control.Control.call(this, {
        element: element,
        target: options.target
      });

    };
    ol.inherits(app.CustomToolbarControl, ol.control.Control);
  }


  function changeDay(day) {
    if (parseInt(day) === 9) {
      var d = new Date();
      var dd = d.getDay() - 1;
      gewaehlterTag = dd;

    } else
      gewaehlterTag = parseInt(day);
	printLogs("Tag: " + gewaehlterTag);
    calcMarkers(9, false);
  }

  /**
   * Umschalten zwischen aktueller Zeit/Tag und frei wählbarer Zeit/Tag
   */
  function setTimeNow() {
    if (document.getElementById('divZeitwahl').style.display === 'none') {
      document.getElementById('filterPanel').setAttribute("style", "height: auto");
      document.getElementById('buttonZeit').innerHTML = 'Zurücksetzen';
      document.getElementById('divZeitwahl').setAttribute("style", "display: block");
      document.getElementById('time').innerHTML = 'eigene Zeit gewählt';
    } else if (document.getElementById('divZeitwahl').style.display === 'block') {
      document.getElementById('filterPanel').setAttribute("style", "height: auto");
      document.getElementById('buttonZeit').innerHTML = 'Bibliotheksbesuch planen';
      document.getElementById('divZeitwahl').setAttribute("style", "display: none");

      // wieder aktuelle Uhrzeit in Uhrzeitfeld schreiben
      var now = new Date();
      document.getElementById('time').innerHTML = now.getHours() + ':' + addZero(now.getMinutes()) + " Uhr";
    }

    tageChoice.value = 9;
    var d = new Date();

    gewaehlterTag = d.getDay() - 1;
    slider.value = dates('stunde') * 60;
    gewaehlteZeit = dates('uhrzeit');
    textZeitwahl.innerHTML = "";
    calcMarkers(9, false);
  }

  // Feiertag mit festem Datum
  var feiertage = [
    '01.01',
    '01.05',
    '03.10',
    '01.11',
    '25.12',
    '26.12'
  ];

  function showFilter(screenSize) {
    var p = document.getElementById('filterButton');
    if (p.innerText === 'Filter ausblenden') {
      p.innerText = 'Filter einblenden';
      document.getElementById('filterPanel').setAttribute("style", "height: 25px");
      document.getElementById('spanFilterPanel').setAttribute("style", "display: none");
	  printLogs("Filter ausgeblendet");
    } else if (p.innerText === 'Filter einblenden') {
      p.innerText = 'Filter ausblenden';
      document.getElementById('spanFilterPanel').setAttribute("style", "display: block");
      document.getElementById('filterPanel').setAttribute("style", "height: auto");
	  printLogs("Filter eingeblendet");
    }
  }

  /* wenn Stunden oder Minuten nur eine Ziffer haben, eine 0 vorne dran hängen */
  function addZero(i) {
    if (i < 10)
      i = "0" + i;
    return i;
  }

  



  
  
  function calcMarkersByName(input) {
 // console.log('INPUT: ' + input);
	// USB Köln
    if (input === 'USB Köln') {
      for (var i = 0; i < institute.length; i++) {
        if (institute[i].sigel.indexOf('DE-38') != -1 && input.length === 4) {
          ints.push(institute[i]);
          marks.push(koordinaten[i]);
          sigelname.push(institute[i].name);
        }
      }
    }
	// HWA
	else if (input === 'USB Köln / Humanwissenschaftliche Abteilung') {
      for (var i = 0; i < institute.length; i++) {
        if (institute[i].sigel.indexOf('DE-38-HWA') != -1 && input.length === 4) {
          ints.push(institute[i]);
          marks.push(koordinaten[i]);
          sigelname.push(institute[i].name);
        }
      }
    }
	else {
      for (var t = 0; t < input.length; t++) {
        for (var i = 0; i < institute.length; i++) {
          if (institute[i].sigel === input[t]) {
            ints.push(institute[i]);
            marks.push(koordinaten[i]);
          }
        }
      }
    }
	
	if(ints.length !== 0) {
		showData(ints[0].name, true);
		savedFakultaet = ints[0].sigel;

		foundInsts = [];
		if (typeof vectorSource !== 'undefined')
		  map.removeLayer(vectorLayer);

		drawMarkers(ints, marks);
	}
    ints = [];
    marks = [];
  }

  function clearSearch() {
    document.getElementById('suche').value = "";
    calcMarkers('8', false);
  }

  // Verarbeite Sucheingabe in Textfeld 'suche'
  function search() {
    nurGeoeffnet.checked = false;
    var inp = document.getElementById('suche').value;

    for (var v = 0; v < institute.length; v++) {
      var insti = institute[v];
      if (insti.name.toLowerCase().indexOf(inp.toLowerCase()) != -1 || insti.sigel.indexOf(inp) == 0) {
        foundInsts.push(institute[v].sigel);
      }
    }
	
	var neudazu = [];
	neudazu = abkuerzungen(inp);
	
	if(neudazu.length > 0) {
		for (var i = 0; i < neudazu.length; i++) {
			var hinzufuegen = true;
			for(var g = 0; g < foundInsts.length; g++) {
				if(foundInsts[g] == neudazu[i]) {
					hinzufuegen = false;
				}
			}	
			if(hinzufuegen){
				foundInsts.push(neudazu[i]);
			}
		}
	}	
	printLogs("Gesuchte Institute: " + foundInsts);
	
    calcMarkersByName(foundInsts);
  }
  
  
  
	function abkuerzungen(inp) {
		var array = [];
		var arrSize = 1;
		var end = [];
		
		var wordsToIterate = [];
		if(inp.indexOf(' ') >= 0){
			wordsToIterate = inp.split(' ');
			arrSize = wordsToIterate.length;
			//console.log("Größe: " + wordsToIterate.length);
		}
		
		input = inp;
	//	for (var it = 0; it < wordsToIterate.length; it++) {
			var arr = [];
			/*var input;
			if(inp.indexOf(' ') == 0)
				input = inp;
			else
				input = wordsToIterate[it];
			/* Allgemeine Abkürzungen */
			if('vwl'.indexOf(input) != -1) arr.push('DE-38-101');
			if('hwa'.indexOf(input) != -1) arr.push('DE-38-HWA');
			
			
			/* Abkürzung aller zu 101 gezählten Bibs */
			 if(input.indexOf('Volkswirtschaftliche Bibliothek 2 (ehem.: Seminar für Finanzwissenschaft)') != -1) arr.push('DE-38-101');
			// if(input == 'Finanzwissenschaftliches Forschungsinstitut') arr.push('DE-38-101');
			 if(input.indexOf('Volkswirtschaftliche Bibliothek 1 (ehem.: Staatswissenschaftliches (Volkswirtschaftliches) Seminar)') != -1) arr.push('DE-38-101');
				
			 if('finanzwissenschaft'.indexOf(input.toLowerCase()) != -1 || 'volkswirtschaftliche'.indexOf(input.toLowerCase()) != -1|| 'DE-38-103'.indexOf(input) != -1) arr.push('DE-38-101');
			
				
			/* Liste von Schlagworten basierend auf den Angaben der Bibliotheken */	
			/* A */
			if('abenteuerliteratur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('abwl'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-108', 'DE-38-112', 'DE-38-118', 'DE-38-124', 'DE-38-156');
			if('afrikanistik'.indexOf(input.toLowerCase())  != -1) arr.push('DE-38-998', 'DE-38-999');
			if('altägypten'.indexOf(input.toLowerCase())  != -1 || 'ägyptologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-416');
			if('alte geschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-404');
			if('altertumskunde'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-404', 'DE-38-460', 'DE-38-461', 'DE-38-462');		
			if('amerikanische literatur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-411');
			if('amerikanisches recht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-235');
			if('anglistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-411');
			if('anglo amerikanische geschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-422');
			if('anthropologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-419'); /* eigtl. anthrpologie (afrikanische) */			
			if('anwaltsrecht- und notarrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-233');
			if('arabistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-414');
			if('arbeitskreis'.indexOf(input.toLowerCase()) != -1 || 'nationalismusforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-420');
			if('arbeitsmarktpolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-107');
			if('arbeitsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-203', 'DE-38-204');		
			if('archäologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-426', 'DE-38-427', 'DE-38-438');
			if('architekturgeschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-445');
			if('aristoteles'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-432');
			if('asien'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-450', 'DE-38-459');	
			if('atomrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-220');
			if('augustinus'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-432');
			if('ausländisches'.indexOf(input.toLowerCase()) != -1 || 'öffentliches'.indexOf(input.toLowerCase()) != -1 || 'recht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-207');
			if('ausländisches'.indexOf(input.toLowerCase())  != -1|| 'privatrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-208');
			if('außenwirtschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('australische'.indexOf(input.toLowerCase())  != -1|| 'literatur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-411');	
			if('averroes'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-432');
				
			/* B */
			if('bankbetriebslehre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-109');		
			if('bankrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-217');
			if('bankseminar'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-109');
			if('behindertenpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-302');
			if('berufspädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-134');
			if('besteuerung'.indexOf(input.toLowerCase())  != -1|| 'steuerwettbewerb'.indexOf(input.toLowerCase())  != -1|| 'international'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('betriebswirtschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-118', 'DE-38-124', 'DE-38-156');
			if('bilanzrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-231');
			if('bildungsforschung'.indexOf(input.toLowerCase())  != -1|| 'sozialwissenschaften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-309', 'DE-38-310');
			if('bildungspolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-107');
			if('bildungswissenschaften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-327');	
			if('biochemie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503', 'DE-38-507');	
			if('bioinformatik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');	
			if('biologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');	
			if('biozentrum'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');	
			if('botanik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');	
			if('bruch'.indexOf(input.toLowerCase())  != -1|| 'max'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-430');
			if('bürgerliches'.indexOf(input.toLowerCase())  != -1|| 'recht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-230', 'DE-38-231', 'DE-38-232', 'DE-38-234');		
			if('byzantinistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-460');

			/* C */
			if('transnational'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-217');	// Center for Transnational Law (CENTRAL)
			if('chemie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-507');
			if('physikalische'.indexOf(input.toLowerCase())  != -1 || 'chemie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-509');
			if('didaktik'.indexOf(input.toLowerCase())  != -1 || 'chemie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-317');
			if('china'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-450');	
			if('collegium'.indexOf(input.toLowerCase())  != -1 || 'musicum'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-430');
			if('computer'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-006');	
			if('computerrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');	
			if('controlling'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-160');	

			/* D */
			if('datenverarbeitung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-006');	
			if('datenschutz'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');	
			if('ddr'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-219'); // DDR-Recht	
			if('denkmalpflege'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-445');	
			if('deutsche'.indexOf(input.toLowerCase())  != -1 || 'sprache'.indexOf(input.toLowerCase())  != -1 || 'literatur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-312', 'DE-38-405');
			if('digitale'.indexOf(input.toLowerCase())  != -1 || 'medien'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			if('distributionsforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-158');	
			if('dokumentationszentrum'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-233');	// Dokumentationszentrum für Europäisches Anwalts- und Notarrecht
			if('drika'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-438');	
			if('drosophila'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');	
		
			/* E */
			if('commerce'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-159');	// E-Commerce
			if('empirische'.indexOf(input.toLowerCase()) != -1 || 'sozialforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-132', 'DE_38-141', 'DE-38-171');	
			if('energierecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-220');	
			if('energiewirtschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-119', 'DE-38-220');	
			if('englische'.indexOf(input.toLowerCase()) != -1 || 'literatur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-411');	
			// englische sprache 313, 411
			if('entwicklungsbiologie'.indexOf(input.toLowerCase())  != -1|| 'entwicklungsgenetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');	
			if('entwicklungspsychologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-305');	
			if('epigraphik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-404');	
			if('erziehungswissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-HWA');	
			if('ethnologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-431');	
			if('europäische'.indexOf(input.toLowerCase())  != -1|| 'fragen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-125', 'DE-38-EDZ');
			if('europäische'.indexOf(input.toLowerCase())  != -1|| 'musikethnologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-324');
			if('europäische'.indexOf(input.toLowerCase())  != -1|| 'rechtslinguistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-468');
			if('europäische'.indexOf(input.toLowerCase())  != -1|| 'union'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-215', 'DE-38-EDZ');
			// Europäisches Anwalts- und Notarrecht 38/233
			// Europäisches Arbeits- und Sozialrecht 38/203
			if('europäisches'.indexOf(input.toLowerCase())  != -1|| 'dokumentationszentrum'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-EDZ');
			if('europäisches'.indexOf(input.toLowerCase())  != -1|| 'medienrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222', 'DE-38-EDZ');
			if('europäisches'.indexOf(input.toLowerCase()) != -1 || 'rundfunkrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222', 'DE-38-EDZ');
			if('europäisches'.indexOf(input.toLowerCase()) != -1 || 'telekommunikationsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222', 'DE-38-EDZ');
			if('europäisches'.indexOf(input.toLowerCase()) != -1 || 'wettbewerbsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222', 'DE-38-EDZ');
			if('europarecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-212', 'DE-38-213', 'DE-38-215', 'DE-38-468', 'DE-38-EDZ');	
			if('evangelische'.indexOf(input.toLowerCase()) != -1 || 'theologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-111', 'DE-38-623');
			if('evolutionsgenetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');

			/* F */		
			// Fachbibliothek Rechtswissenschaft / Rechtswissenschaftliches Seminar 38/201
			if('fachsprachen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-468');
			if('feminismus'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-007');
			if('fennistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-444');
			if('fernsehen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101'); // ??? Fernsehen in der vwl?
			if('fernsehwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-448');
			if('festschriften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('film'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('filmwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-448');
			if('finanzausgleich'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('finanzierungslehre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-164');
			if('finanzpolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('finanzwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			// Finnische Sprachwissenschaft und Literatur 38/444
			if('finnland'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-444');
			if('firmenmitteilungen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			// Flexible Fertigung 38/110
			if('föderalismus'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			// Forschungsstelle für das Recht des Gesundheitswesens 38/225
			if('frauenfilme'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('frauenliteratur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			// Frieden und Sicherheit 38/237
			// Frühe Neuzeit 38/425
			if('frühgeschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-426');
			
			/* G */
			// Geldtheorie u. Geldpolitik 38/101
			// Gemeinsame Fachbibliothek Archäologien 38/427
			// Gemeinsame Fachbibliothek Asien 38/450, 38/459
			// Gemeinsame Fachbibliothek Biowissenschaften 38/503
			// Gemeinsame Fachbibliothek Chemie 38/507
			// Gemeinsame Fachbibliothek Medienkultur und Theater 38/429, 38/448
			// Gemeinsame Fachbibliothek Rechtswissenschaft 38/201
			// Gemeinsame Fachbibliothek Slavistik 38/418
			// Gemeinsame Fachbibliothek Soziologie 38/132
			// Gemeinsame Fachbibliothek Versicherungswissenschaft 38/123
			// Gemeinsame Fachbibliothek Volkswirtschaftslehre 38/101
			if('gender'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-007'); // Gender Studies in Köln
			if('genetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			if('genossenschaften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('geobibliothek'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('geochemie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('geographie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-314', 'DE-38-517');
			if('geologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('geophysik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('germanistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-405');
			if('geschäftsberichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-102');
			if('geschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-306', 'DE-38-420');
			// Geschichte (amerikanische, anglo-amerikanische, britische, englische) 38/422
			// Geschichte (außereuropäische) 38/423
			// Geschichte (osteuropäische) 38/425
			if('geschlechterforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-007', 'DE-38-420');
			if('geschlechtskrankheiten'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009');
			if('gesellschaftsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-218', 'DE-38-230', 'DE-38-231');
			if('gesis'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-587');
			if('gestik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-007');
			if('gesundheitsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-225');
			// gewerblicher Rechtsschutz 38/222, 38/230
			if('gleichstellungsbeauftragte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-007');
			// Großbritannien (Geschichte) 38/422
			
			/* H */
			if('hagiographie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-461');
			if('handel'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-112', 'DE-38-124', 'DE-38-156');
			if('handelsforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-159');
			if('handelsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-218' , 'DE-38-230');
			if('hauptseminar'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-201');
			if('heilpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-302');
			// Historische Musikwissenschaft 38/430
			// Historisches Institut 38/420 , 38/421, 38/422, 38/423 , 38/425, 38/306
			if('hochschuldidaktik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-236');
			if('homosexuell'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009');
			if('hörfunk'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('humangenetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			if('humanismus'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-434');
			if('humanwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-HWA');
			if('husserl'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-433');
			
			/* I */
			// ICAO (International Civil Aviation Organization) 38/212
			if('immunologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			if('indiologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-408');
			if('informatik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-006', 'DE-38-526');
			// Informations- und Kommunikationssysteme 38/110
			// International Investment Law Center Cologne 38/227
			// International Peace and Security Law 38/237
			// Internationale Besteuerung und Steuerwettbewerb 38/101
			// Internationales Kolleg Morphomata 38/467
			// Internationales und Ausländisches Privatrecht 38/208
			if('internet'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-006', 'DE-38-101');
			if('internetrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			// Investment law 38/227
			if('ipr'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-208');
			if('iranistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-414');
			if('islamwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-414', 'DE-38-435', 'DE-38-437');
			if('iss'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-205', 'DE-38-132');
			// Italien (Geschichte) 38/420
			// Italienische Literatur 38/434
			// Italienische Renaissance 38/434
			
			/* J */
			// Japanische Kulturgeschichte 38/459
			if('japanologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-459');
			if('jubiläumsschriften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-102');
			if('judaistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-415');
			if('jugendliteratur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			// Juristisches Lernen und Lehren 38/236
			
			/* K */
			// Kanadische Literatur 38/411
			// Kanonisches Recht 38/209
			if('karibik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-423');
			// Karibische Literatur 38/411
			if('kartellrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-215', 'DE-38-230');
			// Katholische Theologie 38/311, 38/325, 38/622
			if('kinderarmut'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-308');
			if('kinderliteratur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('kirchenrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-209');
			// Klassische Philologie 38/404
			if('klimatologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-540');
			// Kolonialgeschichte (europäische) 38/423
			if('kommunikationsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			if('kooperation'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			// Kooperationsforschung (Nonprofit-Bereich) 38/101
			if('koptologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-416');
			if('kosmochemie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('kriminologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-223');
			if('kristallographie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			// KUGA (Kulturen und Gesellschaften Asiens) - Japan 38/459
			if('kundenmanagement'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-156');
			// Kunst und Textil 38/319, 38/320
			if('kunstgeschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-428');
			// Kunstgeschichte (lateinamerikanische) 38/423
			// Kunsthistorisches Institut 38/428, 38/445
			
			/* L */
			if('lateinamerika'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-423');
			// Lehrstuhl für Bürgerliches Recht, Wirtschafts- und Anwaltsrecht 38/232
			// Leibniz-Institut für Sozialwissenschaften 38/141
			if('lektüre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('lesbisch'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009');
			if('lesen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('liederbücher'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-324');
			if('linguistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-405', 'DE-38-409', 'DE-38-410', 'DE-38-465');
			// Linguistik (afrikanische) 38/419
			// Literatur (Italien) 38/434
			// Literatur (Spätantike) 38/461
			if('literaturwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-405', 'DE-38-411');
			if('lizenzvertragsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-230');
			if('logistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-110', 'DE-38-155');
			// Luft- und Weltraumrecht 38/212
			if('luther'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-325');
			
			/* M */
			if('mädchenliteratur'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('markenrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-230');
			if('markenmanagement'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-124');
			if('marketing'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-112', 'DE-38-124', 'DE-38-156', 'DE-38-158');
			if('marktforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-112');
			// Martin-Buber-Institut für Judaistik 38/415
			if('mathematik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-315', 'DE-38-501');
			if('mausgenetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			// Max-Bruch-Archiv 38/430
			// Max Freiherr von Oppenheim-Stiftung 38/435
			if('mediävistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-405');
			if('medien'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101', 'DE-38-323');
			if('medienforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('medienkulturwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-429', 'DE-38-448', 'DE-38-464');
			if('medienökonomie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('medienpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-323');
			if('medienrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			if('medienwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-429', 'DE-38-448');
			if('medizin'.indexOf(input.toLowerCase()) != -1) arr.push('ZB MED');
			if('medizinsoziologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-328');
			// Meister Eckhart 38/432
			if('messe'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-112', 'DE-38-124');
			if('messewirtschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-158');
			if('meteorologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-540');
			if('migration'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-308');
			if('mineralogie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('mittelalter'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-420');
			// Mittelalter-Philosophie 38/432
			if('mittelamerika'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-423');
			// Mittellateinische Literatur 38/461
			// Mittellateinische Sprache 38/461
			// Modellkolleg Bildungswissenschaften 38/327
			if('molekularbiologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			if('molekulargenetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			if('morphometa'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-467');
			if('musikethnologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-324', 'DE-38-430');
			if('musikpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-321');
			if('musikwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-321', 'DE-38-430');
			
			/* N */
			if('nationalismusforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-420');
			// Neue Medien 38/101
			if('neulatein'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-462');
			// Neulateinische Literatur 38/434
			// Neuzeitliche Geschichte 38/420
			// Nicolaus Cusanus 38/432
			if('niederlandistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-406');
			// Nordische Philologie 407
			if('nordistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-407');
			if('nubienkulturen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-416');
			if('numismatik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-404');
			
			/* O */
			// Öffentliche Finanzwirtschaft 38/101
			// Öffentliches Recht 38/213
			if('ökonometrie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-140');
			if('ökumene'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-325');
			// Operations Research 38/110
			// Oppenheim-Stiftung 38/435
			if('organisation'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-108');
			if('organisationsseminar'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-108');
			// Orientalisches Seminar 38/414
			// Ostasiatisches Seminar 38/450, 38/459
			if('osteuropa'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-425');
			// Europäisches Recht 38/219
			if('ostrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-219');
			
			/* P */
			if('pädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-303', 'DE-38-304', 'DE-38-403');
			if('paläontologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('patentrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-230');
			if('papyrologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-404');
			// Peace and Security Law 38/237
			if('persönlichkeitsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			if('petrarca'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-434');
			if('petrologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('phänomenologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-433');
			// Philologie (klassisch) 38/404
			if('philosophie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-401', 'DE-38-432', 'DE-38-433');
			// Philosophisches Seminar 38/401
			if('phonetik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-410');
			if('physik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-502');
			// Physikalische Chemie 38/509
			if('platon'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-432');
			if('polen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-425');
			if('politikwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-308', 'DE-38-125');
			// Politische Presse 38/421
			// Politische Wissenschaft 38/125
			if('popularmusik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-430');
			if('portugal'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-423');
			// Portugiesisch-Brasilianisches Institut 38/413
			if('presse'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-421');
			if('presserecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			// Privatrecht (internationales und ausländisches) 38/208
			// Privatrechtsgeschichte (neuere) 38/216 
			if('produktion'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-110');
			// Produktionsplanung und -steuerung 38/110
			if('produktpolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-112');
			if('prosodie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-410');
			if('psychologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-305');
			// Psychologische Tests 38/326
			// Public economics 38/101
			if('publizistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-421');
			
			/* Q */
			// Quantitative Methoden (Statistik) 38/140
			if('quartärgeologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			
			/* R */
			if('rechenzentrum'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-006');
			if('rechnungslegung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-117');
			// Recht (ausländisches öffentliches) 38/207
			// Recht (US-amerikanisches) 38/235
			// Recht der Europäischen Gemeinschaften 38/215
			if('rechtsdidaktik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-236');
			if('rechtsextremismus'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-308');
			// Rechtsgeschichte (deutsche und rheinische) 38/216
			// Rechtslinguistik (europäische) 38/468
			if('rechtspolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-211');
			if('rechtssprachen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-468');
			if('rechtstheorie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-234');
			if('rechtsvergleichung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-206', 'DE-38-208', 'DE-38-219');
			if('rechtswissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-201');
			// Rechtswissenschaftliches Seminar 38/201
			if('rehabilitätspädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-302');
			if('rehabilitätswissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-328');
			if('religionslehre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-622');
			if('renaissance'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-434');
			// Rheinische Musikgeschichte 38/430
			// Rheinland (Landesgeschichte) 38/420
			if('risikomanagement'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123');
			if('romanistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-412', 'DE-38-413', 'DE-38-434');
			// Römisches Recht 38/214
			if('rrzk'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-006');
			if('rundfunk'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('rundfunkökonomie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('rundfunkrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			if('russland'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-425');
			
			/* S */
			if('schmalenbach'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-102'); // Schmalenbach-Bibliothek
			if('schulforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-304');
			if('schulpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-304');
			if('schwul'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009');
			if('sexualpolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-007');
			if('simulation'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-110');
			if('skandinavistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-407');
			if('slavistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-418');
			if('sonderpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-302');
			if('sozialforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-132'); // Sozialforschung (angewandte) 38/132
			if('sozialgeographie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-136');
			if('sozialpädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-134');
			if('sozialpolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('sozialpsychologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-132', 'DE-38-305');
			// Sozialrecht (deutsches und europäisches) 38/203
			if('sozialstatistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-139', 'DE-38-140');
			if('sozialwissenschaften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-132', 'DE-38-308', 'DE-38-309', 'DE-38-310', 'DE-38-587');
			if('soziologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-132', 'DE-38-309');
			if('spanien'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-423');
			// Spätantike Literatur 38/461
			if('sprachlabor'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-466');
			// Sprachliche Informationsverarbeitung 38/465
			if('sprachwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-405', 'DE-38-409', 'DE-38-411');
			if('stastskirchenrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-209');
			if('staatsphilosophie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-211');
			if('staatsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-213', 'DE-38-225', 'DE-38-228');
			if('staatsverschuldung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('staatswissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('statistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-139', 'DE-38-140', 'DE-38-501');
			if('std'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009'); // STD (Sexually Transmitted Diseases) 38/009
			if('steuerberatung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-118');
			if('steuerlehre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-117'); // Steuerlehre (betriebswirtschaftliche) 38/117
			// Steuerpolitik u. -theorie 38/101
			if('steuerrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-210', 'DE-38-231');
			if('steuerseminar'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-117');
			if('stochastik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-501');
			if('strafrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-208');
			// Strafrecht (ausländisches und internationales) 38/206
			if('strafprozessrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-205');
			if('sudankulturen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-416');
			if('südamerika'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-423');
			// Supply Chain Managemant 38/110
			// Systematische Musikwissenschaft 38/430
			// Strafrecht (ausländisches und internationales) 38/206
			
			/* T */
			if('tamilistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-408');
			if('telekommunikationsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222');
			if('testothek'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-326');
			if('textilgestaltung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-320');
			if('textilwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-320');
			if('theatergeschichte'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-429');
			if('theaterwissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-429', 'DE-38-448');
			// Theaterwissenschaftliche Sammlung 38/429
			// Theologie, evangelisch 38/311, 38/623 
			// Theologie, katholisch 38/311, 38/325, 38/622
			// Thomas von Aquin 38/432
			// Thomas-Institut 38/432
			if('transgender'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009');
			if('transsexuell'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-009');
			if('treuhandseminar'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-118');
			if('tv'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			
			/* U */
			if('ukraine'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-425');
			if('umfrageergebnisse'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-141');
			if('umweltökonomie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('umweltpolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('umweltrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-220');
			if('ungarn'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-425');
			// Universitätsarchiv 38/005
			// Universitäts- und Stadtbibliothek Köln 38
			if('unternehmensentwicklung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-108');
			if('unternehmensführung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-155');
			if('unternehmensrechnug'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-160');
			// Ur- und Frühgeschichte 38/426, 38/438
			if('urheberrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-222', 'DE-38-230');
			// US-amerikanisches Recht 38/235
			// USA (Geschichte) 38/422
			
			/* V */
			if('varietätenlinguistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-468');
			if('verfahrensrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-221');
			if('verfassungsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-228');
			// Vergleichende Bildungsforschung und Sozialwissenschaften 38/310
			if('versicherungslehre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123');
			if('versicherungsmathematik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123');
			if('versicherungsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123', 'DE-38-218');
			if('versicherungswesen'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123');
			if('versicherungswirtschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123');
			if('versicherungswissenschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-123', 'DE-38-218');
			if('versorgungsforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-328');
			if('verwaltungslehre'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-213', 'DE-38-228');
			if('verwaltungsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-228');
			if('völkerkunde'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-431');
			if('völkerrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-207', 'DE-38-212', 'DE-38-219');
			// Volkswirtschaftslehre / Gemeinsame Fachbibliothek 38/101
			// VWL Fachbibliothek 38/101
			
			/* W */
			if('wahlforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-141');
			if('währungspolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-107');
			if('weltraumforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-514');
			if('weltraumrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-212');
			if('wettbewerbsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-215', 'DE-38-222', 'DE-38-230');
			// Wirtschaftsarchiv 38/102
			if('wirtschaftsforschung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-171');
			if('wirtschaftsgeographie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-136');
			if('wirtschaftsinformatik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-526');
			if('wirtschaftsmathematik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-501');
			if('wirtschaftspädagogik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-134');
			if('wirtschaftspolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101', 'DE-38-107');
			if('wirtschaftsprüfung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-118');
			if('wirtschaftspsychologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-305');
			if('wirtschaftsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-204', 'DE-38-212', 'DE-38-215', 'DE-38-218', 'DE-38-232');
			if('wirtschaftsstatistik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-140', 'DE-38-139');
			if('wirtschaftstheorie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('wirtschaftswissenschaften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-310');
			if('wirtschaftsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-224', 'DE-38-228');
			if('wohneigentum'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('wohungspolitik'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('wohnungsrecht'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			if('wohnungswirtschaft'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-101');
			
			/* X/Y/Z */
			if('zeitschriften'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-421');
			if('zeitung'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-421');
			if('zoologie'.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-503');
			
			
		
		
		// if(''.indexOf(input.toLowerCase()) != -1) arr.push('DE-38-');	
			
			/*if(it === 0)
				array = arr;
			else if(it > 0) {
				for(var it = 0; it < array.length; it++) {
					if(arr.indexOf(array[it]) != -1)
						end.push(array[it]);
				}
				console.log("Noch drin: " + end);
			}*/
/********************************************** mögliche Lösung
strng = "I have been working here since last six months";
text = ["since", "be", "ths"];
results = [];   // make result as object

     for(var i=0; i<=text.length; i++){
          if(strng.indexOf(text[i]) != -1)
             results.push(text[i]);
     }
     
console.log(results);     			
/*****************************************************/
		//}
		
		return arr;
			
	}

  

  // Verarbeite Sucheingabe in Textfeld 'suche'
  function searchMob() {
    nurGeoeffnet.checked = false;
    var inp = document.getElementById('sucheMob').value;
    for (var v = 0; v < institute.length; v++) {
      var insti = institute[v];
      if (insti.name.toLowerCase().indexOf(inp.toLowerCase()) != -1 || insti.sigel.indexOf(inp) == 0) {
        foundInsts.push(institute[v].sigel);
      }
    }
	var neudazu = [];
	neudazu = abkuerzungen(inp);
	
	if(neudazu.length > 0) {
		for (var i = 0; i < neudazu.length; i++) {
			var hinzufuegen = true;
			for(var g = 0; g < foundInsts.length; g++) {
				if(foundInsts[g] == neudazu[i]) {
					hinzufuegen = false;
				}
			}	
			if(hinzufuegen){
				foundInsts.push(neudazu[i]);
			}
		}
	}	
	printLogs("Gesuchte Institute: " + foundInsts);
    calcMarkersByName(foundInsts);
  }

  function istOffen(sub1) {
  //console.log(sub1);
    // 9.00 - 18.45 Uhr
    if (sub1.match(new RegExp(/(\d{1,2}\.\d{2}[\s]?-[\s]?\d{1,2}\.\d{2}[\s]?)/g))) {
      var z = sub1.match(new RegExp(/(\d{1,2}\.\d{2}[\s]?-[\s]?\d{1,2}\.\d{2}[\s]?)/g));

      for (t1 = 0; t1 < z.length; t1++) {
        var zeit = z[t1].split("-");
        for (v in zeit) {
          var temp = zeit[v].toString().replace(/[^\d]/g, "");
          zeit[v] = temp;
        }
        if (checkZeit(zeit[0], zeit[1]) === true)
          return 1;
        else if (checkZeit(zeit[0], zeit[1]) === false) {
          if (t1 < z.length - 1)
            continue;
          else
            return 2;
        }
      }
    }
    if (sub1.indexOf('geschlossen') != -1)
      return 2;
    else
      return 0;
  }

  function getMonat(input) {
    var monatsArray = ["Januar", "Februar", "März", "April", "Mai", "Juni",
      "Juli", "August", "September", "Oktober", "November", "Dezember"
    ];
    return monatsArray.indexOf(input) + 1;
  }

  /**
   * wandelt Tage zu Nummern um mit denen gerechnet werden kann
   *
   * @param tag	Tag als String
   * @return korrespondierende Nummer (0 - Montag, 1 - Dienstag, ...)
   */
  function tageZuNummer(tag) {
    var t = tag.trim();
    var arrayKurz = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];
    var arrayLang = ['Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag', 'Sonntag'];

    if (t.length == 2) {
      return arrayKurz.indexOf(t);
    } else if (t.length > 2) {
      return arrayLang.indexOf(t);
    }
  }

  /* input: 'tag', 'uhrzeit', 'volles_datum', 'tag_monat' */
  /*
   * Gibt verschiedene Datumsabfragen zurück
   *
   * @param input	nach was wird gefragt ('tag', 'uhrzeit', 'volles_datum', 'stunde', 'tag_monat')
   * @return das abgefragte Ergebnis
   */

  function updateClock() {
    var now = new Date(); // current date

    time = now.getHours() + ':' + addZero(now.getMinutes()) + " Uhr";

    document.getElementById('time').innerHTML = time;
    gewaehlteZeit = now.getHours() + '' + addZero(now.getMinutes());
	
	printLogs("Uhrzeit: " + gewaehlteZeit);
    setTimeout(updateClock, 30000);
  }

  function dates(input) {
    var date = new Date();
    switch (input) {
      /* Wochentag */
      case 'tag':
        // return date.getDay() -1;
        return gewaehlterTag;

        /* Uhrzeit ohne doppelpunkt*/
      case 'uhrzeit':
        return date.getHours() + "" + addZero(date.getMinutes());

      case 'stunde':
        return date.getHours();

        /* volles Datum ohne Punkte */
      case 'volles_datum':
        return date.getDate() + "" + (addZero(date.getMonth() + 1)) + "" + date.getFullYear();

        /* Tag und Monat (mit Punkt fuer Feiertag) */
      case 'tag_monat':
        return addZero(date.getDate()) + "." + (date.getMonth() + 1);

      case 'monat':
        return date.getMonth() + 1;

      case 'voller_tag':
	 // return '01.01';
        return addZero(date.getDate()) + "." + (date.getMonth() + 1);

      case 'semester':
		// Semesterferien simulieren
		 //return '20180203';
        return date.getFullYear() + "" + (addZero(date.getMonth() + 1)) + "" + addZero(date.getDate());
    }
  }

  /**
   * Bestimmt ob das aktuelle Datum innerhalb oder ausserhalb der Semesterzeit liegt
   *
   * @return	true (wenn innerhalb des Semesters), false (wenn in der Semesterfreien Zeit)
   */
  function getSemester() {
    var aktDatum = dates('semester');
	var returnVal = false;
    for (var semesterIt = 0; semesterIt < semesterZeit.length; semesterIt++) {
      if (aktDatum > semesterZeit[semesterIt].von && aktDatum < semesterZeit[semesterIt].bis)
        return true;
    }

	return returnVal;
  }

  /**
   * Bestimmt ob aktuelles Datum Feiertag ist oder nicht
   *
   * @return true (wenn Feiertag), false (wenn normaler Tag)
   */
  function getFeiertag() {
    var tagFull = dates('voller_tag');
    if (feiertage.indexOf(tagFull) == -1)
      return false;
    else
      return true;

  }

  /**
   * prüft ob aktueller Tag innerhalb der Öffnungszeitentage der Bibliothek liegen
   *
   * @param tagDelete ist obsolet, kann weg
   * @param tagArray die Tage an denen die Bibliothek geöffnet ist als Nummern
   *
   * @return true (wenn geöffnet), false (wenn geschlossen)
   */
  function checkTag(tagDELETE, tagArray) {
	if(tagArray == undefined)
		return false;
    var tag = dates('tag');
    for (var t = 0; t < tagArray.length; t++) {
      if(tagArray[t] == tag)
        return true;
    }  
    return false;
	//	}
  }


  function checkZeit(beg, end) {
    //var aktTime = dates('uhrzeit');
    aktTime = gewaehlteZeit;
    if (parseInt(aktTime) >= parseInt(beg) && parseInt(aktTime) <= parseInt(end))
      return true;
    else
      return false;
  }


  function parse(str) {
	//console.log(str);
    // Wenn Feiertag, alle Bibs rot markieren und beenden
	//XXX: überarbeiten, dass anderer Tag gewählt werden kann, auch wenn heute Feiertag ist
    if (feiertag === true)
      return 2;

    // Sonderfälle abfangen zB "Heute geschlossen"
    if (str.search('Heute geschlossen') !== -1) {
      return 2;
    }

    // zB "Im August geschlossen"
    if (str.search("geschlossen") !== -1) {
      if (str.search(/[A-Za-z]{3,} geschlossen/g) !== -1) {
        var matched = str.match(/[A-Za-z]{3,} geschlossen/g);
        var temp = matched[0].toString().replace(/ geschlossen/g, "");
        var monat = getMonat(temp);
        if (monat === dates('monat'))
          return 2;
      }
    }
	

    // Eintrag enthält getrennte Angaben zu Semester und Semesterfreien Zeiten
    if (str.search("Im Semester:") !== -1) {
      if (semester === true) {
        var n = str.replace("Im Semester:", "");
        if (n.indexOf("In den Semesterferien:") != -1) {
          var indexSemesterferien = n.indexOf("In den Semesterferien:");
          var sub1 = n.substring(0, indexSemesterferien);
          var f = [];
          if (sub1.indexOf(";") != -1) {
            f = sub1.split(";");
            for (var y in f) {
              var temp = f[y].toString().replace(new RegExp(/<[.*][^>]*>/g), " "); // löscht Tags nicht
              f[y] = temp;
            }
          } else
            f[0] = sub1;
		 var tage = [];
          var eintrag;
          for (i = 0; i < f.length; i++) {
            //console.log("i: " + i);
            eintrag = f[i];

            //*************************************************************************************************************************
            // Mo - Fr:
            if (eintrag.match(new RegExp(/([A-Za-z]{2}[\s]?-[\s]?[A-Za-z]{2}:[\s]?)/g))) {
              var t = eintrag.match(new RegExp(/([A-Za-z]{2}[\s]?-[\s]?[A-Za-z]{2}:[\s]?)/g));
              tage = t[0].split("-");

              for (var tti = 0; tti < tage.length; tti++) {
                var temp = tage[tti].toString().replace(/[^A-Za-z]/g, "");
                tage[tti] = tageZuNummer(temp.trim());

              }
              // auffuellen
              var start = tage[0];
              var end = tage[tage.length - 1];

              for (start; start < end; start++) {
                tage.push(start + 1);
              }
            }
            //*************************************************************************************************************************
            // Mo, Di, ...
            else if (eintrag.match(new RegExp(/[A-Za-z]{2}(\,|: )/g))) {
              var t = eintrag.match(new RegExp(/[A-Za-z]{2}(\,|: )/g));

              for (var ti = 0; ti < t.length; ti++) {
                var temp = t[ti].toString().replace(/[^A-Za-z]/g, "").trim();
                t[ti] = tageZuNummer(temp);
              }
              tage = t;
            }

            // checken ob akt Tag drinnen ist
            if (checkTag('tt', tage) === true)
              return istOffen(eintrag);
            else if (checkTag('tt', tage) === false) {
              if (i < f.length - 1)
                continue;
              else
                return 2;
            }
          }
        }
        // Bib enthält zwar Eintrag für "Im Semester" aber nicht für "in den Semesterferien", also Pin ausgrauen
        else
          return 0;
      }
      if (semester === false) {
        if (str.indexOf("In den Semesterferien:") != -1) {
          var indexSemesterferien = str.indexOf("In den Semesterferien:");
          var sub1 = str.substring(indexSemesterferien, str.length);
          var f = [];
          if (sub1.indexOf(";") != -1) {
            f = sub1.split(";");
            for (var y = 0; y < f.length; y++) {
              var temp = f[y].toString().replace(new RegExp(/<[.*][^>]*>/g), " "); // löscht Tags nicht
              f[y] = temp;
            }
          } else
            f[0] = sub1;

          var eintrag;
          for (i = 0; i < f.length; i++) {
            //	console.log("i: " + i);
            eintrag = f[i];

            //XXX: ist nicht so richtig schlau
            //*************************************************************************************************************************
            // Abfangen wenn in Semesterferien keine Zeit sondern Mailadresse angegeben ist

            /*if(eintrag.match(new RegExp(/<a href="/g))) {
    				return 0;
    			}
*/
            //*************************************************************************************************************************
            // Mo - Fr:
            if (eintrag.match(new RegExp(/([A-Za-z]{2}[\s]?-[\s]?[A-Za-z]{2}:[\s]?)/g))) {
              var t = eintrag.match(new RegExp(/([A-Za-z]{2}[\s]?-[\s]?[A-Za-z]{2}:[\s]?)/g));
              var tage = t[0].split("-");
              for (var tti = 0; tti < tage.length; tti++) {
                var temp = tage[tti].toString().replace(/[^A-Za-z]/g, "");
                tage[tti] = tageZuNummer(temp.trim());

              }
              // auffuellen
              var start = tage[0];
              var end = tage[tage.length - 1];

              for (start; start < end; start++) {
                tage.push(start + 1);
              }
            }
            //*************************************************************************************************************************
            // Mo, Di, ...
            else if (eintrag.match(new RegExp(/[A-Za-z]{2}(\,|: )/g))) {
              var t = eintrag.match(new RegExp(/[A-Za-z]{2}(\,|: )/g));

              for (var ti = 0; ti < t.length; ti++) {
                var temp = t[ti].toString().replace(/[^A-Za-z]/g, "").trim();
                t[ti] = tageZuNummer(temp);
              }
              tage = t;
            }

            // checken ob akt Tag drinnen ist
            if (checkTag('tt', tage) === true)
              return istOffen(eintrag);
            else if (checkTag('tt', tage) === false) {
              if (i < f.length - 1)
                continue;
              else
                return 2;
            }
          }
        }
        // Bib enthält zwar Eintrag für "Im Semester" aber nicht für "in den Semesterferien", also Pin grauen
        else {
          return 0;
        }
      }
    }

    //***************************************************************************************************************************
    // Eintrag enthält keine Angaben zu Semesterzeiten
    else if (str.search("Im Semester:") === -1) {
      var sub1 = str;
      var f = [];
      if (sub1.indexOf(";") != -1) {
        f = sub1.split(";");
        for (var y = 0; y < f.length; y++) {
          var temp = f[y].toString().replace(new RegExp(/<[.*][^>]*>/g), " "); // löscht Tags nicht
          f[y] = temp;
        }
      } else
        f[0] = sub1;

      for (i = 0; i < f.length; i++) {
        eintrag = f[i];
        //*************************************************************************************************************************
        // Mo - Fr:
        if (eintrag.match(new RegExp(/([A-Za-z]{2}[\s]?-[\s]?[A-Za-z]{2}:[\s]?)/g))) {
          var t = eintrag.match(new RegExp(/([A-Za-z]{2}[\s]?-[\s]?[A-Za-z]{2}:[\s]?)/g));
          var tage = t[0].split("-");

          for (var tti = 0; tti < tage.length; tti++) {
            var temp = tage[tti].toString().replace(/[^A-Za-z]/g, "");
            tage[tti] = tageZuNummer(temp.trim());

          }
          // auffuellen
          var start = tage[0];
          var end = tage[tage.length - 1];

          if (end - start > 1) {
            for (start + 1; start < end; start++) {
              tage.push(start);
            }
          }
        }
        //*************************************************************************************************************************
        // Mo, Di, ...
        else if (eintrag.match(new RegExp(/[A-Za-z]{2}(\,|: )/g))) {
          var t = eintrag.match(new RegExp(/[A-Za-z]{2}(\,|: )/g));

          for (var ti = 0; ti < t.length; ti++) {
            var temp = t[ti].toString().replace(/[^A-Za-z]/g, "").trim();
            t[ti] = tageZuNummer(temp);
          }
          tage = t;
        }

        // checken ob akt Tag drinnen ist
        if (checkTag('tt', tage) === true)
          return istOffen(eintrag);
        else if (checkTag('tt', tage) === false) {
          if (i < f.length - 1)
            continue;
          else
            return 2;
        }
      }
    }
  }

  function drawMarkers(list, marks) {
    var i, lat, lon, geom, feature, features = [], style;
	
	
	//var trigger101 = false;
	//var trigger101IsIn = false;
    for (var i = 0; i < list.length; i++) {
	
		sig = list[i].sigel;
		if(sig == 'DE-38-103' || sig == 'DE-38-105' || sig == 'DE-38-106' || sig == 'DE-38-113' || sig == 'DE-38-120' || sig == 'DE-38-121' || sig == 'DE-38-128' || sig == 'DE-38-146' || sig == 'DE-38-157' || sig == 'DE-38-104' || sig == 'DE-38-166' || sig == 'DE-38-108') {
				continue;
		}
		
		
	/*	
		if(trigger101IsIn == false && trigger101 == true) {
			for(var t = 0; t < list.length; t++) {
				if(list[t].sigel == 'DE-38-101')
					trigger101IsIn = true;
			}
			for(var add = 0; add < institute.length; add++) {
				if(institute[add].sigel == 'DE-38-101'){}
			}
			
		}
		*/
			// checken ob 101 in Liste ist, wenn nicht hinzufügen
			// wie komm ich da an die aktuellen Sachen aus dem kUG
			
		  lat = marks[i][0];
		  lon = marks[i][1];

		  geom = new ol.geom.Point(ol.proj.fromLonLat([lon, lat])
			//ol.proj.transform([lon, lat], 'EPSG:4326', 'EPSG:3857')
		  );

		  /* Zeiten parsen */
		  var zeiten, pinColor;
		  if (list[i].zeiten.length > 0) {
			zeiten = parse(list[i].zeiten);

			// wenn "nur geöffnet" ausgewählt ist
			if (nurGeoeffnet.checked === true && zeiten === 2)
			  continue;

			/* Farbe des Pins bestimmen */
			var rotation = 0;
			if (zeiten == 1) {
			  pinColor = green;
			  rotation = 0;
			} else if (zeiten == 2) {
			  pinColor = red;
			  rotation = 50;
			} else if (zeiten === 0) {
			  pinColor = grey;
			  rotation = -50;
			} else if (zeiten == undefined) {
			  pinColor = grey;
			  rotation = -50;
			}
		  }
		  /* wenn keine Zeiten gefunden */
		  else {
			pinColor = grey;
		  }

		  var iconFeature = new ol.Feature({
			geometry: new ol.geom.Point(ol.proj.transform([lat, lon], 'EPSG:4326', 'EPSG:3857')),
			name: zeiten + "$$" + list[i].name + "$$" + list[i].zeiten + "$$" + list[i].sigel + "$$" + list[i].art + "bibliothek",
		  });


		  
		  var iconStyle = new ol.style.Style({
			image: new ol.style.Icon( /** @type {olx.style.IconOptions} */ ({
			  anchor: [0.5, 1280],
			  anchorXUnits: 'fraction',
			  anchorYUnits: 'pixels',
			  opacity: 0.8,

			  /* scale factor */
			  scale: 0.03,
			  //scale: 0.3,
			  src: pinColor,

			  //rotation: rotation

			}))
		  });

		  iconFeature.setStyle(iconStyle);
		  features.push(iconFeature);
    };
    vectorSource = new ol.source.Vector({
      features: features
    });
    vectorLayer = new ol.layer.Vector({
      source: vectorSource
    });
    map.addLayer(vectorLayer);

    if (list.length === 1) {
      var ext = iconFeature.getGeometry().getExtent();
      var center = ol.extent.getCenter(ext);
      var cologne = ol.proj.transform(center, 'EPSG:4326', 'EPSG:3857');
      map.setView(new ol.View({
        center: [center[0], center[1]],
        zoom: 15
      }));
    }
  }

  function resetInst() {
    document.getElementById('institutsChoice').options.selectedIndex = 0;
    calcMarkers(document.getElementById('institutsChoice').value, false);
  }

  function resetArt() {
    document.getElementById('artSelect').options.selectedIndex = 0;
    calcMarkers(9, false);
  }


  function newDataListEntries() {
    var options = '';
    document.getElementById('theDataListMob').innerHTML = "";
    var string = "<ul><li>";
	
    for (var i = 0; i < sigelname.length; i++) {
      options += '<option value="' + sigelname[i] + '" />';
      string += sigelname[i] + "</li>";
    }
    string += '</ul>';
    document.getElementById('theDataListMob').innerHTML = options;
  }

  function doTheTextMobile(all, mitInfo) {
    var string = '';

    string += "<ul>";
    for (var i = 0; i < all.length; i++) {
      string += '<li style="text-decoration: underline">';
      string += all[i].name;
      string += '</li>';

    }
    string += '<ul>';

    return string;
  }

  
  function showData(text, mitInfo) {

    for (var t = 0; t < institute.length; t++) {
      if (institute[t].name.indexOf(text) != -1) {
        var s1 = "";
        var zeiten = parse(institute[t].zeiten);

        var s1 = '';
        var status = '';

        var nameLink = institute[t].name;

        if (institute[t].sigel.match(/DE-38-[0-9]{0,3}$/))
        nameLink = '<a target="blank" href="/lernen_arbeiten/bibliotheken/38_' + institute[t].sigel.replace(/DE-38-/g, "") + '/index_ger.html">' + institute[t].name + '</a>';

        if(institute[t] === 'USB Köln')
            nameLink = '<a target="blank" href="/index_ger.html">' + institute[t].name + '</a>';
		
		if(institute[t] === 'USB Köln / Humanwissenschaftliche Abteilung')
			nameLink = '<a target="blank" href="https://www.ub.uni-koeln.de/ueber_uns/dach/hwa/index_ger.html>' + institute[t].name + '</a>';
		
        if (zeiten === 1)
          status = '<strong style="color: lightgreen">zurzeit geöffnet</strong>';
        else if (zeiten === 2)
          status = '<strong style="color: red">zurzeit geschlossen</strong>';
        else if (zeiten === 'undefined')
          status = '<strong style="color: white">Keine Öffnungszeiten angegeben</strong>';
        else if (zeiten === 0)
            status = '<strong style="color: white">Keine Öffnungszeiten angegeben</strong>';

        if (mitInfo === true) {
          s1 += "<br />" + nameLink + "<br /><br />" + institute[t].art + "bibliothek" + "<br />" + status + "<br /><br />";
          s1 += institute[t].zeiten;
        } else {
          s1 += institute[t].name + "<br />" + status;
        }
        displayFromMobile = institute[t].sigel;
      }
      document.getElementById('daten').innerHTML = s1;
    }
  }

   function guiAusblenden() {
    document.getElementById('obereLeiste').setAttribute('style', 'display: none');
    document.getElementById('filterPanel').setAttribute('style', 'display: none');
  }


  // Semester und Semesterfreien Zeiten bis September 2019
  // wie wird Semesterfreie Zeit definiert?
  // Schema -> JahrMonatTag
  var semesterZeit = [{
    von: 20170418,
    bis: 20170728
  }, {
    von: 20171009,
    bis: 20180202
  }, {
    von: 20180409,
    bis: 20180720
  }, {
    von: 20181008,
    bis: 20190201
  }, {
    von: 20190401,
    bis: 20190712
  }];


  function calcMarkers(fakultaet, fromMobile) {

    if (showDesktopGui === false) {
      document.getElementById('map').setAttribute('style', 'display: none');
      document.getElementById('mobileView').setAttribute('style', 'display: block');
      document.getElementById('titleMobileDesktop').innerHTML = "Mobile Suche nach Campusbibliotheken";
    } else if (showDesktopGui === true) {
      document.getElementById('mobileView').setAttribute('style', 'display: none');
      document.getElementById('map').setAttribute('style', 'display: block');
      document.getElementsByClassName("ol-unselectable")[0].setAttribute('style', 'display: block');
      document.getElementById('titleMobileDesktop').innerHTML = "Interaktive Map aller Campusbibliotheken";
    }

    var e = document.getElementById("institutsChoice");

    if (e.options[e.selectedIndex].value !== '8')
      document.getElementById('tdInstMark').innerHTML = "<button onclick='resetInst()' style='color: red'>✖</button>";
    else if (e.options[e.selectedIndex].value === '8')
      document.getElementById('tdInstMark').innerHTML = "";

    var e1 = document.getElementById("artSelect");

    if (e1.options[e1.selectedIndex].value !== '0')
      document.getElementById('tdArtMark').innerHTML = "<button onclick='resetArt()' style='color: red'>✖</button>";
    else if (e1.options[e1.selectedIndex].value === '0') {
      document.getElementById('tdArtMark').innerHTML = "";
    }

    if (typeof vectorSource !== 'undefined') {
      map.removeLayer(vectorLayer);
    }
    if (fakultaet === 9)
      fakultaet = savedFakultaet;

    savedFakultaet = fakultaet;
    sigelname = [];
	
	// Sonderfall: fakultätsübergreifende/ungebundene Bibliotheken
	if(document.getElementById('institutsChoice').value === 'DE-38-0') {
		for (var i = 0; i < institute.length; i++) {
			// USB
			if (institute[i].sigel === 'DE-38') {
				ints.push(institute[i]);
				marks.push(koordinaten[i]);
				sigelname.push(institute[i].name);
			}
			// HWA
			if (institute[i].sigel === 'DE-38-HWA') {
				ints.push(institute[i]);
				marks.push(koordinaten[i]);
				sigelname.push(institute[i].name);
			}
			// Bibliothek für Informatik und Wirtschaftsinformatik
			if (institute[i].sigel === 'DE-38-526') {
				ints.push(institute[i]);
				marks.push(koordinaten[i]);
				sigelname.push(institute[i].name);
			}
		}
	}
	
	// Sonderfall: HumFak
	if(document.getElementById('institutsChoice').value === 'DE-38-3') {
		for (var i = 0; i < institute.length; i++) {
			// HWA
			if (institute[i].sigel === 'DE-38-HWA') {
				ints.push(institute[i]);
				marks.push(koordinaten[i]);
				sigelname.push(institute[i].name);
			}
		}
	}

    if (fakultaet === 'DE-38') {
      for (var i = 0; i < institute.length; i++) {
        if (institute[i].sigel === 'DE-38') {
          ints.push(institute[i]);
          marks.push(koordinaten[i]);
          sigelname.push(institute[i].name);
        }
      }
    } else {
      if (fakultaet !== '8' && fakultaet.toString().match(new RegExp(/\d*/g))) {
        for (var i = 0; i < institute.length; i++) {
          /* alle Bibliotheken */
          if (document.getElementById("artSelect").value === '0') {
            if (institute[i].sigel.indexOf(fakultaet) == 0) {
              ints.push(institute[i]);
              marks.push(koordinaten[i]);
              sigelname.push(institute[i].name);
            }
          }
          /* nur Praesensbibliotheken */
          else if (document.getElementById("artSelect").value === '1') {
            if (institute[i].sigel.indexOf(fakultaet) == 0) {
              if (institute[i].art.indexOf('Pr') == 0) {
                ints.push(institute[i]);
                marks.push(koordinaten[i]);
                sigelname.push(institute[i].name);
              }
            }
            /* nur Ausleihbibliotheken */
          } else if (document.getElementById("artSelect").value === '2') {
            if (institute[i].sigel.indexOf(fakultaet) == 0) {
              if (institute[i].art.indexOf('Aus') == 0) {
                ints.push(institute[i]);
                marks.push(koordinaten[i]);
                sigelname.push(institute[i].name);
              }
            }
          }
        }
      } else {
        for (var i = 0; i < institute.length; i++) {
          if (document.getElementById("artSelect").value === '0') {
            ints.push(institute[i]);
            marks.push(koordinaten[i]);
            sigelname.push(institute[i].name);
          }
          /* nur Präsensbibliotheken */
          else if (document.getElementById("artSelect").value === '1') {
            if (institute[i].art.indexOf('Pr') == 0) {
              ints.push(institute[i]);
              marks.push(koordinaten[i]);
              sigelname.push(institute[i].name);
            }
            /* nur Ausleihbibliotheken */
          } else if (document.getElementById("artSelect").value === '2') {
            if (institute[i].art.indexOf('Aus') == 0) {
              ints.push(institute[i]);
              marks.push(koordinaten[i]);
              sigelname.push(institute[i].name);
            }
          }
        }
      }
    }
	
	
    //  newDataListEntries();
    // document.getElementById('ergebnis').innerHTML = doTheTextMobile(ints, true);

    drawMarkers(ints, marks);
    ints = [];
    marks = [];
  }

   /* Institutsliste */
      var institute = [
[%-
   koordinaten = [];
   
   FOREACH location IN locations ;

    coordinates = location.fields.${"L0280"}.first.content.split(',').reverse.join(',');
    sigel       = location.identifier ;
    description = location.description ;
    art         = location.fields.${"L0180"}.first.content;
    zeiten      = location.fields.${"L0110"}.first.content;
    IF art.match('Präsenz');
       art = "Präsenz";
    ELSIF art.match('Ausleih');
       art = "Ausleih";
    END;

    IF coordinates ; %]
      {
        sigel: "[% sigel %]",
        name: "[% description %]",
        art: "[% art %]",
        zeiten: '[% zeiten %]',
      },
[%
    koordinaten.push(coordinates);
    END ;
   END ;%]    
];

      // Bibliothekskoordinaten
      var koordinaten = [
      [% FOREACH koord IN koordinaten %]
        [[% koord %]],
      [% END %]
      ];

      window.onload = init('');
      </script> 
[% END %]


